version: "3"

services:
  jenkins:
    image: jenkins/jenkins
    restart: always
    privileged: true
    user: root
    ports:
      - 8085:8080
      - 50003:50000
    volumes:
      - ~/jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  sonar:
    image: sonarqube
    restart: always
    ports:
      - "9000:9000"
    environment:
      - sonar.jdbc.url=jdbc:postgresql://postgres:5432/sonar
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    expose:
      - 3306
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=database
    volumes:
      - db_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - mysql
    restart: always
    ports:
      - "8084:80"
    environment:
      PMA_HOST: mysql

  postgres:
    image: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - /data/sonarqube/postgresql:/var/lib/postgresql
      - /data/sonarqube/postgresql_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.2
    restart: always
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.5.2
    restart: always
    ports:
      - "25826:25826"
    volumes:
      - ~/elk-config:/elk-config
    command: logstash -f /elk-config/logstash.config
    depends_on:
      - elasticsearch

  zipkin:
    image: openzipkin/zipkin-slim
    restart: unless-stopped
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch:9200
    ports:
      - "9411:9411"
    depends_on:
      - elasticsearch

  todo-dashboard:
    image: coghlada/todo-dashboard:1.0.0
    build:
      context: ../todo-dashboard
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - zipkin

  gateway-service:
    image: coghlada/gateway-service:1.0.0
    build:
      context: ../gateway-service
    restart: unless-stopped
    ports:
      - "8081:8081"

  todo-service:
    image: coghlada/todo-service:1.0.0
    build:
      context: ../todo-service
    restart: unless-stopped
    ports:
      - "8082:8082"
    depends_on:
      - mysql

volumes:
  db_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:
  elasticsearch_data: